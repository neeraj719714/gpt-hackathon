





RazorpayX - Sample Payload | Razorpay DocsPricingAPI ReferenceSupportLog InSign UpHomeGet StartedPaymentsBanking PlusPartnersDeveloper ToolsAPI Reference GuideErrorsWebhooksWebhooksSet Up and Edit WebhooksBest PracticesValidate and Test WebhooksSample PayloadOrdersPaymentsRefundsDisputesInvoicesSubscriptionsPartnersRouteSmart CollectPayment LinksRazorpayXFAQsWebhooksPayloadsXRazorpayX - Sample PayloadSample payload for RazorpayX.Following is the list of currently available webhook events for RazorpayX.
Payout Payloads
The payload remains the same irrespective of the fund_account_type to which payout was made. That is, the payload is same whether the payout was made to a bank account, vpa or card.
The table below lists the webhook events available for RazorpayX Payouts. You can enable webhooks for payout statuses listed in Payout Life Cycle.
Webhook EventApplicable ForDescriptionpayout.pendingall payoutsTriggered whenever a payout moves to the pending state. The payout remains in this state till you approve or reject it.payout.rejectedall payoutsTriggered whenever a payout moves to the rejected state. The payout was rejected by someone from your team.payout.queuedall payouts Triggered whenever a payout moves to the queued state. Payout goes to queued state when you do not have sufficient funds to process it or when the beneficiary bank/NPCI/partner bank is down. This event is applicable only for RazorpayX Lite.You will receive the reason for the payout to be in the queued state as part of the status_details object.payout.initiatedall payoutsTriggered when the payout moves to the processing state when the payout is created or from the queued state when sufficient funds are available to process the payout.payout.processedall payoutsTriggered when a payout moves to the processed state. This happens when the payout is processed by the contact's bank.payout.updatedall payoutsTriggered whenever there is a change in the payout entity. For example, when we receive the UTR for the payout from the bank. For NEFT transactions, this webhook is fired within 90 seconds.For IMPS and UPI transactions, this webhook is generally fired immediately.payout.reversedall payoutsTriggered whenever a payout fails and the amount is returned to your business account.payout.failedall payoutsTriggered when a payout is failed because the beneficiary bank OR NPCI OR processing partner bank is down. If the beneficiary bank/partner banks/NPCI does not recover within the stipulated SLA, a FAILED event will be sent with the respective reason.  Handy Tips It is mandatory to subscribe to the payout.failed event if you are using RazorpayX APIs. 
Order of Events
Take payouts in RazorpayX as an example. For payouts, you should receive webhooks in the following order:

payout.pending (if you have Approval Workflow enabled on your account)
payout.queued (in case your business account does not have sufficient balance to process the payout)
payout.initiated
payout.processed or payout.reversed

The above order may not be followed at all times. Please keep this in mind and configure your webhook URL to handle such scenarios.
The processed and reversed states are the last states for a payout. Their corresponding webhooks payout.processed or payout.reversed indicate this state change. Any webhook received after these should be ignored.
Handy TipsThe error object has been deprecated.
Payout Pending
payout.pendingcopy{  "entity":"event",  "account_id":"acc_BfVUrG6tDiL7H0",  "event":"payout.pending",  "contains":[    "payout"  ],  "payload":{    "payout":{      "entity":{        "id":"pout_1Aa00000000001",        "entity":"payout",        "fund_account_id":"fa_1Aa00000000001",        "amount":100,        "currency":"INR",        "notes":{          "note_key 1":"Tea. Earl Gray. Hot.",          "note_key 2":"Tea. Earl Gray. Decaf."        },        "fees":0,        "tax":0,        "status":"pending",        "purpose":"refund",        "utr":null,        "mode":"NEFT",        "reference_id":null,        "narration":"Test Fund Transfer",        "batch_id":null,        "status_details": {          "description": "Confirmation of the credit to the beneficiary is pending from HDFC bank. Please check the status after after 24th October 2021, 10:40 PM",          "source": "beneficiary_bank",          "reason": "beneficiary_bank_confirmation_pending"        }        "created_at":1580808301,        "fee_type": ""      }    }  },  "created_at":1580808301}
Payout Rejected
payout.rejectedcopy{  "entity":"event",  "account_id":"acc_BfVUrG6tDiL7H0",  "event":"payout.rejected",  "contains":[    "payout"  ],  "payload":{    "payout":{      "entity":{        "id":"pout_1Aa00000000001",        "entity":"payout",        "fund_account_id":"fa_1Aa00000000001",        "amount":10000,        "currency":"INR",        "notes":{          "note_key 1":"Tea. Earl Gray. Hot.",          "note_key 2":"Tea. Earl Gray. Decaf."        },        "fees":0,        "tax":0,        "status":"rejected",        "purpose":"refund",        "utr":null,        "mode":"NEFT",        "reference_id":null,        "narration":"Acme Fund Transfer",        "batch_id":null,        "status_details": {          "description": "Payout rejected by beneficiary bank. Please contact beneficiary bank",          "source": "beneficiary_bank",          "reason": "beneficiary_bank_rejected"        }        "created_at":1581512005,        "fee_type": ""      }    }  },  "created_at":1581512006}
Payout Queued
payout.queuedcopy{  "entity":"event",  "account_id":"acc_BfVUrG6tDiL7H0",  "event":"payout.queued",  "contains":[    "payout"  ],  "payload":{    "payout":{      "entity":{        "id":"pout_1Aa00000000001",        "entity":"payout",        "fund_account_id":"fa_1Aa00000000001",        "amount":286540,        "currency":"INR",        "notes":{          "note_key 1":"Tea. Earl Gray. Hot.",          "note_key 2":"Tea. Earl Gray. Decaf."        },        "fees":0,        "tax":0,        "status":"queued",        "purpose":"payout",        "utr":null,        "mode":"IMPS",        "reference_id":null,        "narration":"Acme Fund Transfer",        "batch_id":null,        "status_details": {          "description": "Payout is queued as there is insufficient balance in your business account to process the payout",          "source": "business",          "reason": "low_balance"        }        "created_at":1580119445,        "fee_type": ""      }    }  },  "created_at":1580119445}
Payout Initiated
payout.initiatedcopy{  "entity":"event",  "account_id":"acc_BfVUrG6tDiL7H0",  "event":"payout.initiated",  "contains":[    "payout"  ],  "payload":{    "payout":{      "entity":{        "id":"pout_1Aa00000000001",        "entity":"payout",        "fund_account_id":"fa_1Aa00000000001",        "amount":100,        "currency":"INR",        "notes":{          "note_key 1":"Tea. Earl Gray. Hot.",          "note_key 2":"Tea. Earl Gray. Decaf."        },        "fees":590,        "tax":90,        "status":"processing",        "purpose":"refund",        "utr":null,        "mode":"NEFT",        "reference_id":null,        "narration":"Acme Fund Transfer",        "batch_id":null,        "status_details": {          "description": "Confirmation of the credit to the beneficiary is pending from HDFC bank. Please check the status after after 24th October 2021, 10:40 PM",          "source": "beneficiary_bank",          "reason": "beneficiary_bank_confirmation_pending"        }        "created_at":1579865132,        "fee_type": "",      }    }  },  "created_at":1579865132}
Payout Processed
payout.processedcopy{  "entity":"event",  "account_id":"acc_BfVUrG6tDiL7H0",  "event":"payout.processed",  "contains":[    "payout"  ],  "payload":{    "payout":{      "entity":{        "id":"pout_1Aa00000000001",        "entity":"payout",        "fund_account_id":"fa_1Aa00000000001",        "amount":100,        "currency":"INR",        "notes":{          "note_key 1":"Tea. Earl Gray. Hot.",          "note_key 2":"Tea. Earl Gray. Decaf."        },        "fees":3,        "tax":0,        "status":"processed",        "purpose":"payout",        "utr":"qwer1yuijaaasss",        "mode":"IMPS",        "reference_id":null,        "narration":"Acme Fund Transfer",        "batch_id":null,        "status_details": {          "description": "Payout is processed and the money has been credited into the beneficiaries account",          "source": "beneficiary_bank",          "reason": "payout_processed"        }        "created_at":1579175640,        "fee_type": "",      }    }  },  "created_at":1579175674}
Payout Updated
payout.updatedcopy{  "entity":"event",  "account_id":"acc_BfVUrG6tDiL7H0",  "event":"payout.updated",  "contains":[    "payout"  ],  "payload":{    "payout":{      "entity":{        "id":"pout_1Aa00000000001",        "entity":"payout",        "fund_account_id":"fa_1Aa00000000001",        "amount":2000000,        "currency":"INR",        "notes":{          "note_key 1":"Tea. Earl Gray. Hot.",          "note_key 2":"Tea. Earl Gray. Decaf."        },        "fees":1062,        "tax":162,        "status":"processed",        "purpose":"refund",        "utr":"933815233814",        "mode":"IMPS",        "reference_id":null,        "narration":"Acme Fund Transfer",        "batch_id":null,        "status_details": {          "description": "Payout is processed and the money has been credited into the beneficiaries account",          "source": "beneficiary_bank",          "reason": "payout_processed"        }        "created_at":1579863747,        "fee_type": ""      }    }  },  "created_at":1579863747}
Payout Reversed
payout.reversedcopy{  "entity":"event",  "account_id":"acc_BfVUrG6tDiL7H0",  "event":"payout.reversed",  "contains":[    "payout"  ],  "payload":{    "payout":{      "entity":{        "id":"pout_1Aa00000000001",        "entity":"payout",        "fund_account_id":"fa_1Aa00000000001",        "amount":212,        "currency":"INR",        "notes":{          "note_key 1":"Tea. Earl Gray. Hot.",          "note_key 2":"Tea. Earl Gray. Decaf."        },        "fees":9,        "tax":2,        "status":"reversed",        "purpose":"payout",        "utr":"qwer12uijaaasssd",        "mode":"IMPS",        "reference_id":null,        "narration":"Acme Fund Transfer",        "batch_id":null,        "status_details": {          "description": "Beneficiary bank systems are offline, please retry after 30 min",          "source": "beneficiary_bank",          "reason": "beneficiary_bank_offline"        }        "created_at":1580118057,        "fee_type": ""      }    }  },  "created_at":1580118468}
Payout Failed
payout.failedcopy{  "entity": "event",  "account_id": "acc_BfVUrG6tDiL7H0",  "event": "payout.failed",  "contains": [    "payout"  ],  "payload": {    "payout": {      "entity": {        "id": "pout_1Aa00000000001",        "entity": "payout",        "fund_account_id": "fa_1Aa00000000001",        "amount": 100,        "currency": "INR",        "notes": {          "note_key 1": "Tea. Earl Gray. Hot.",          "note_key 2": "Tea. Earl Gray. Decaf."        },        "fees": 0,        "tax": 0,        "status": "failed",        "purpose": "payout",        "utr": "qwer12ui3323a22d",        "mode": "IMPS",        "reference_id": null,        "narration": "Acme Fund Transfer",        "batch_id": null,        "status_details":  {          "description": "Payout failed as the beneficiary account is closed. Please contact the beneficiary bank",          "source": "beneficiary_bank",          "reason": "bank_account_closed"        }        "created_at": 1580120202,        "fee_type": ""      }    }  },  "created_at": 1580120247}
Transaction Payloads
The table below lists the webhook events available for RazorpayX transactions.
Webhook EventsDescriptiontransaction.createdTriggered whenever you:  Make a Payout (RazorpayX Lite or current account).  Add funds to your RazorpayX account (RazorpayX Lite or current account).  Perform any kind of transaction (ATM transaction, cash withdrawal, netbanking transfer, encashed cheque) on your current account.
Transaction Created
Payload: PayoutPayload: Add Funds (Direct Bank Transfer)copy{  "entity":"event",  "account_id":"acc_1Aa00000000001",  "event":"transaction.created",  "contains":[    "transaction"  ],  "payload":{    "transaction":{      "entity":{        "id":"txn_1Aa00000000001",        "entity":"transaction",        "account_number":"7878780080749731",        "amount":218,        "currency":"INR",        "credit":0,        "debit":218,        "balance":4242,        "source":{          "id":"pout_1Aa00000000001",          "entity":"payout",          "fund_account_id":"fa_1Aa00000000001",          "amount":100,          "notes":[],          "fees":118,          "tax":18,          "status":"processing",          "utr":null,          "mode":"IMPS",          "created_at":1565343608        },        "created_at":1565343678      }    }  },  "created_at":1565343678}
Watch Out!If you have changed your webhook secret, remember to use the old secret for webhook signature validation while retrying older requests. Using the new secret will lead to signature mismatch.
Do Not Parse or Cast the Webhook Request BodyWhile generating a signature at your end, ensure that the webhook body is passed as an argument in the raw webhook request body. Do not parse or cast the webhook request body.
Payout Link Payloads
The payload remains the same irrespective of the fund_account_type to which payout was made. That is, the payload is same whether the payout was made to a bank account, vpa or card.
Available Events
The table below lists the webhook events available for RazorpayX Payout Links.
payout_link.pendingTriggered whenever a payout link moves to the pending state. This indicates that the payout link has been created. Applicable only for cases where approval workflow is set.payout_link.issuedTriggered whenever a payout link moves to the issued state. This indicates that the payout link has been created.payout_link.processingTriggered whenever a payout link moves to the processing state. This indicates that your contact has entered their fund account details and the payout is being processed.payout_link.processedTriggered whenever a payout link moves to the processed state. This indicates that the payout has been successfully made.payout_link.attemptedTriggered whenever the underlying payout has reversed and another attempt is required on the payout link.payout_link.cancelledTriggered whenever a payout link moves to the cancelled state. This indicates that you have cancelled the payout link.payout_link.rejectedTriggered whenever a payout link moves to the rejected state. This indicates that the Approver has rejected the payout link. Applicable only for cases where approval workflow is set.payout_link.expiredTriggered whenever a payout link moves to the expired state. This indicates that the payout link has expired. Handy Tips Expiry feature for Payout Links must be enabled before using this webhook event. Know more about how to  enable the expiry feature.
Payout Link Attempted
payout_link.attempted
Triggered whenever the underlying payout has reversed and another attempt is required on the payout link.
payout_link.attemptedcopy{  "entity": "event",  "account_id": "acc_BfVUrG6tDiL7H0",  "event": "payout_link.attempted",  "contains": [    "payout_link"  ],  "payload": {    "payout_link": {      "entity": {        "id": "poutlk_00000000000001",        "entity": "payout_link",        "contact_id": "cont_00000000000001",        "contact": {          "name": "Gaurav Kumar",          "contact": "912345678",          "email": "gaurav.kumar@example.com"        },        "fund_account_id": "fa_00000000000001",        "purpose": "refund",        "status": "issued",        "amount": 1000,        "currency": "INR",        "description": "Payout link for Gaurav Kumar",        "attempt_count": 0,        "receipt": "Receipt No. 1",        "notes": {          "notes_key_1": "Tea, Earl Grey, Hot",          "notes_key_2": "Tea, Earl Greyâ¦ decaf."        },        "short_url": "https://rzp.io/i/3b1Tw6",        "send_sms": true,        "send_email": true,        "cancelled_at": null,        "created_at": 1545383037,        "expire_by": 1545384058,        "expired_at": null      }    }  },  "created_at": 1545383037}
Payout Link Issued
payout_link.issued
Triggered whenever a payout link moves to the issued state. This indicates that the payout link has been created.
payout_link.issuedcopy{  "entity": "event",  "account_id": "acc_BFQ7uQEaa7j2z7",  "event": "payout_link.issued",  "contains": [    "payout_link"  ],  "payload": {    "payout_link": {      "entity": {        "id": "poutlk_FKkrBbaVLrr72C",        "entity": "payout_link",        "contact_id": "cont_FKkZzShONqnji5",        "contact": {          "name": "Gaurav Kumar",          "email": "gaurav.kumar@example.com",          "contact": "9876543210"        },        "fund_account_id": null,        "purpose": "refund",        "status": "issued",        "amount": 1000,        "currency": "INR",        "description": "Payout link for Gaurav Kumar",        "attempt_count": 0,        "receipt": "Receipt No. 1",        "notes": {          "notes_key_1": "Tea, Earl Grey, Hot",          "notes_key_2": "Tea, Earl Greyâ¦ decaf."        },        "short_url": "https://rzp.io/i/hEHLODQ",        "send_sms": true,        "send_email": true,        "cancelled_at": null,        "created_at": 1596122515,        "expire_by": 1545384058,        "expired_at": null      }    }  },  "created_at": 1596122515}
Payout Link Pending
payout_link.pending
Triggered whenever a payout link moves to the pending state. This indicates that the payout link has been created. Applicable only for cases where approval workflow is set.
payout_link.pendingcopy{  "entity": "event",  "account_id": "acc_BFQ7uQEaa7j2z7",  "event": "payout_link.pending",  "contains": [    "payout_link"  ],  "payload": {    "payout_link": {      "entity": {        "id": "poutlk_FKkrBbaVLrr72C",        "entity": "payout_link",        "contact_id": "cont_FKkZzShONqnji5",        "contact": {          "name": "Gaurav Kumar",          "email": "gaurav.kumar@example.com",          "contact": "9876543210"        },        "fund_account_id": null,        "purpose": "refund",        "status": "pending",        "amount": 1000,        "currency": "INR",        "description": "Payout link for Gaurav Kumar",        "attempt_count": 0,        "receipt": "Receipt No. 1",        "notes": {          "notes_key_1": "Tea, Earl Grey, Hot",          "notes_key_2": "Tea, Earl Greyâ¦ decaf."        },        "short_url": "https://rzp.io/i/hEHLODQ",        "send_sms": true,        "send_email": true,        "cancelled_at": null,        "created_at": 1596122515,        "expire_by": 1545384058,        "expired_at": null      }    }  },  "created_at": 1596122515}
Payout Link Processing
payout_link.processing
Triggered whenever a payout link moves to the processing state. This indicates that your contact has entered their fund account details and the payout is being processed.
The fund_account_id is populated at this stage.
payout_link.processingcopy{  "entity": "event",  "account_id": "acc_BfVUrG6tDiL7H0",  "event": "payout_link.processing",  "contains": [    "payout_link"  ],  "payload": {    "payout_link": {      "entity": {        "id": "poutlk_00000000000001",        "entity": "payout_link",        "contact_id": "cont_00000000000001",        "contact": {          "name": "Gaurav Kumar",          "contact": "912345678",          "email": "gaurav.kumar@example.com"        },        "fund_account_id": "fa_00000000000001",        "purpose": "refund",        "status": "processing",        "amount": 1000,        "currency": "INR",        "description": "Payout link for Gaurav Kumar",        "attempt_count": 1,        "receipt": "Receipt No. 1",        "notes": {          "notes_key_1": "Tea, Earl Grey, Hot",          "notes_key_2": "Tea, Earl Greyâ¦ decaf."        },        "short_url": "https://rzp.io/i/3b1Tw6",        "send_sms": true,        "send_email": true,        "cancelled_at": null,        "created_at": 1545383037,        "expire_by": 1545384058,        "expired_at": null      }    }  },  "created_at": 1545383037}
Payout Link Processed
payout_link.processed
Triggered whenever a payout link moves to the processed state. This indicates that the payout has been successfully made.
payout_link.processedcopy{  "entity": "event",  "account_id": "acc_BfVUrG6tDiL7H0",  "event": "payout_link.processed",  "contains": [    "payout_link"  ],  "payload": {    "payout_link": {      "entity": {        "id": "poutlk_00000000000001",        "entity": "payout_link",        "contact_id": "cont_00000000000001",        "contact": {          "name": "Gaurav Kumar",          "contact": "912345678",          "email": "gaurav.kumar@example.com"        },        "fund_account_id": "fa_00000000000001",        "purpose": "refund",        "status": "processed",        "amount": 1000,        "currency": "INR",        "description": "Payout link for Gaurav Kumar",        "attempt_count": 1,        "receipt": "Receipt No. 1",        "notes": {          "notes_key_1": "Tea, Earl Grey, Hot",          "notes_key_2": "Tea, Earl Greyâ¦ decaf."        },        "short_url": "https://rzp.io/i/3b1Tw6",        "send_sms": true,        "send_email": true,        "cancelled_at": null,        "created_at": 1545383037,        "expire_by": 1545384058,        "expired_at": null      }    }  },  "created_at": 1545383037}
Payout Link Rejected
payout_link.rejected
Triggered whenever a payout link moves to the rejected state. This indicates that the payout link has been rejected by the Approver.
payout_link.rejectedcopy{  "entity": "event",  "account_id": "acc_BfVUrG6tDiL7H0",  "event": "payout_link.rejected",  "contains": [    "payout_link"  ],  "payload": {    "payout_link": {      "entity": {        "id": "poutlk_00000000000001",        "entity": "payout_link",        "contact_id": "cont_00000000000001",        "contact": {          "name": "Gaurav Kumar",          "contact": "912345678",          "email": "gaurav.kumar@example.com"        },        "fund_account_id": null,        "purpose": "refund",        "status": "rejected",        "amount": 1000,        "currency": "INR",        "description": "Payout link for Gaurav Kumar",        "attempt_count": 0,        "receipt": "Receipt No. 1",        "notes": {          "notes_key_1": "Tea, Earl Grey, Hot",          "notes_key_2": "Tea, Earl Greyâ¦ decaf."        },        "short_url": "https://rzp.io/i/3b1Tw6",        "send_sms": true,        "send_email": true,        "cancelled_at": null,        "created_at": 1545383037,        "expire_by": 1545384058,        "expired_at": null      }    }  },  "created_at": 1545383037}
Payout Link Cancelled
payout_link.cancelled
Triggered whenever a payout link moves to the cancelled state. This indicates that you have cancelled the payout link.
payout_link.cancelledcopy{  "entity": "event",  "account_id": "acc_BfVUrG6tDiL7H0",  "event": "payout_link.cancelled",  "contains": [    "payout_link"  ],  "payload": {    "payout_link": {      "entity": {        "id": "poutlk_00000000000001",        "entity": "payout_link",        "contact_id": "cont_00000000000001",        "contact": {          "name": "Gaurav Kumar",          "contact": "912345678",          "email": "gaurav.kumar@example.com"        },        "fund_account_id": null,        "purpose": "refund",        "status": "cancelled",        "amount": 1000,        "currency": "INR",        "description": "Payout link for Gaurav Kumar",        "attempt_count": 0,        "receipt": "Receipt No. 1",        "notes": {          "notes_key_1": "Tea, Earl Grey, Hot",          "notes_key_2": "Tea, Earl Greyâ¦ decaf."        },        "short_url": "https://rzp.io/i/3b1Tw6",        "send_sms": true,        "send_email": true,        "cancelled_at": 1595383037,        "created_at": 1545383037,        "expire_by": 1545384058,        "expired_at": null      }    }  },  "created_at": 1545383037}
Payout Link Expired
payout_link.expired
Triggered whenever a payout link moves to the expired state. This indicates that the payout link has expired.
payout_link.expiredcopy{  "entity": "event",  "account_id": "acc_BfVUrG6tDiL7H0",  "event": "payout_link.expired",  "contains": [    "payout_link"  ],  "payload": {    "payout_link": {      "entity": {        "id": "poutlk_00000000000001",        "entity": "payout_link",        "contact_id": "cont_00000000000001",        "contact": {          "name": "Gaurav Kumar",          "contact": "912345678",          "email": "gaurav.kumar@example.com"        },        "fund_account_id": null,        "purpose": "refund",        "status": "cancelled",        "amount": 1000,        "currency": "INR",        "description": "Payout link for Gaurav Kumar",        "attempt_count": 0,        "receipt": "Receipt No. 1",        "notes": {          "notes_key_1": "Tea, Earl Grey, Hot",          "notes_key_2": "Tea, Earl Greyâ¦ decaf."        },        "short_url": "https://rzp.io/i/3b1Tw6",        "send_sms": true,        "send_email": true,        "cancelled_at": null,        "created_at": 1545383037,        "expire_by": 1545384058,        "expired_at": 1545384658      }    }  },  "created_at": 1545383037}
Account Validation
We support webhook notifications for the following events:
fund_account.validation.completed Bank Account and VPATriggered whenever an account validation transaction is completed.fund_account.validation.failed Bank Account and VPATriggered whenever an account validation transaction fails.
fund_account.validation.completed
This webhook is triggered whenever an account validation transaction is completed.
This webhook is available for both bank account and VPA validation.
Bank AccountVPAcopy{  "entity": "event",  "account_id": "acc_BfVUrG6tDiL7H0",  "event": "fund_account.validation.completed",  "contains": [    "fund_account.validation"  ],  "payload": {    "fund_account.validation": {      "entity": {        "id": "fav_Fa6RwlxjoX0xeO",        "entity": "fund_account.validation",        "fund_account": {          "id": "fa_Fa6Rq1WwNrpMoK",          "entity": "fund_account",          "contact_id": "cont_FYSVUV5EeJKkKb",          "account_type": "bank_account",          "bank_account": {            "name": "Gaurav Kumar",            "bank_name": "HDFC",            "ifsc": "HDFC0000053",            "account_number": "1121431121541121"          },          "batch_id": null,          "active": true,          "created_at": 1599473652        },        "status": "completed",        "amount": 127,        "currency": "INR",        "notes": {          "random_key_1": "Make it so.",          "random_key_2": "Tea. Earl Grey. Hot."        },        "results": {          "account_status": "active",          "registered_name": "Gaurav Kumar"        },        "created_at": 1599473659,        "utr": "XXXXR7310682908954385XX"      }    }  },  "created_at": 1599473661}
fund_account.validation.failed
This webhook is triggered whenever an account validation transaction fails.
Handy TipsThis webhook is available only for bank account validation. It is not available for VPA validation.
Bank Accountcopy{  "entity": "event",  "account_id": "acc_BfVUrG6tDiL7H0",  "event": "fund_account.validation.failed",  "contains": [    "fund_account.validation"  ],  "payload": {    "fund_account.validation": {      "entity": {        "id": "fav_Fa6RwlxjoX0xeO",        "entity": "fund_account.validation",        "fund_account": {          "id": "fa_Fa6Rq1WwNrpMoK",          "entity": "fund_account",          "contact_id": "cont_FYSVUV5EeJKkKb",          "account_type": "bank_account",          "bank_account": {            "name": "Gaurav Kumar",            "bank_name": "HDFC",            "ifsc": "HDFC0000053",            "account_number": "1121431121541121"          },          "batch_id": null,          "active": true,          "created_at": 1599652242        },        "status": "failed",        "amount": 127,        "currency": "INR",        "notes": {          "random_key_1": "Make it so.",          "random_key_2": "Tea. Earl Grey. Hot."        },        "results": {          "account_status": null          "registered_name": null        },        "created_at": 1599473659,        "utr": null      }    }  },  "created_at": 1599473661}
SUBSCRIBE TO DEVELOPER UPDATESSubscribeAPI Reference GuideIntegrationsSupportON THIS PAGEPayout PayloadsOrder of EventsPayout PendingPayout RejectedPayout QueuedPayout InitiatedPayout ProcessedPayout UpdatedPayout ReversedPayout FailedTransaction PayloadsTransaction CreatedPayout Link PayloadsAvailable EventsPayout Link AttemptedPayout Link IssuedPayout Link PendingPayout Link ProcessingPayout Link ProcessedPayout Link RejectedPayout Link CancelledPayout Link ExpiredAccount Validationfund_account.validation.completedfund_account.validation.failed