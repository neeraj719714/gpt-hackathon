





Orders | Razorpay DocsPricingAPI ReferenceSupportLog InSign UpHomeGet StartedPaymentsBanking PlusPartnersDeveloper ToolsAPI Reference GuideGet Started with APIsOrdersPaymentsSettlementsRefundsDisputesCustomersPayments SuitePartnersRazorpayXErrorsWebhooksApiOrdersOrdersCreate, view and update an Order using Razorpay APIs.You can create  Orders and link them to payments.

Order creation is important as it helps you associate every payment with an order, thus preventing multiple payments.
It is compulsory to create orders to capture payments automatically.
The order id secures the payment request and one cannot tamper with the order amount.

Orders and payments go hand-in-hand. Once a payment is captured, the order is marked paid. Know more about:


Payment states


Order states


Payment Capture settings available on the Razorpay Dashboard


Orders API
Orders APIs are used to create, update and retrieve details of Orders. Also, you can retrieve details of payments made towards these Orders.
You can try out our APIs on the Razorpay Postman Public Workspace.

Upgrade Your Orders APIThe payment_capture parameter, earlier passed for automatic capture of payments, is being deprecated and hence no longer required. For automatically capturing the payments, visit our payment capture settings page.
Integrations
Looking to integrate your website, ecommerce store or mobile app with the Razorpay Payment Gateway? Find the right integration method.
If you want to integrate with our APIs directly, reach out to our Support team with your requirements.
You can also collect payments without a website or app, using Razorpay products, such as Payment Links, Payment Pages, Subscription Links, Invoices and Smart Collect.

Use Cases

Create an Order by providing basic details such as amount and currency.
Retrieve details of all the orders that you created.
Retrieve details of a particular order using the unique identifier linked to the Order.
Retrieve all the payments made for an order.
Modify an existing order.

Order Entity
The Order entity has the following fields:
idstring The unique identifier of the order.amountinteger The amount for which the order was created, in currency subunits. For example, for an amount of â¹295.00, enter 29500.partial_paymentboolean Indicates whether the customer can make a partial payment. Possible values:
true: The customer can make partial payments.
false (default): The customer cannot make partial payments.
amount_paidinteger The amount paid against the order.amount_dueinteger The amount pending against the order.
currencystring The currency associated with the order's amount. The default length is 3 characters. Refer to the list of supported currencies.
receiptstring Receipt number that corresponds to this order. Can have a maximum length of 40 characters and has to be unique.statusstring The status of the order. Possible values:
created: When you create an order it is in the created state. It stays in this state till a payment is attempted on it.
attempted: An order moves from created to attempted state when a payment is first attempted on it. It remains in the attempted state till one payment associated with that order is captured.
paid: After the successful capture of the payment, the order moves to the paid state. No further payment requests are permitted once the order moves to the paid state. The order stays in the paid state even if the payment associated with the order is refunded.
attemptsinteger The number of payment attempts, successful and failed, that have been made against this order.notesjson object Key-value pair that can be used to store additional information about the entity. Maximum 15 key-value pairs, 256 characters (maximum) each. For example, "note_key": "Beam me up Scottyâ.created_atinteger Indicates the Unix timestamp when this order was created.
You can view orders, subscribe to Webhook Events related to orders and view reports related to orders from the Razorpay Dashboard.
Sample Entitycopy{  "id": "order_DaZlswtdcn9UNV",  "entity": "order",  "amount": 50000,  "amount_paid": 0,  "amount_due": 50000,  "currency": "INR",  "receipt": "Receipt #20",  "status": "created",  "attempts": 0,  "notes": {    "key1": "value1",    "key2": "value2"  },  "created_at": 1572502745}
Create an Order
The following endpoint creates an order with basic details such as amount and currency. You can use this API for various Razorpay solution offerings.
POST/orders
CurlJavaPythonGoPHPRubyNode.js.NETcopycurl -u [YOUR_KEY_ID]:[YOUR_KEY_SECRET] \-X POST https://api.razorpay.com/v1/orders \-H "content-type: application/json" \-d '{  "amount": 50000,  "currency": "INR",  "receipt": "receipt#1",  "notes": {    "key1": "value3",    "key2": "value2"  }}'
Success ResponseFailure Responsecopy{  "id": "order_EKwxwAgItmmXdp",  "entity": "order",  "amount": 50000,  "amount_paid": 0,  "amount_due": 50000,  "currency": "INR",  "receipt": "receipt#1",  "offer_id": null,  "status": "created",  "attempts": 0,  "notes": [],  "created_at": 1582628071}
Request Parameters
amount mandatoryinteger The amount for which the order was created, in currency subunits. For example, for an amount of â¹295.00, enter 29500. Payment can only be made for this amount against the Order.
currency mandatorystring ISO code for the currency in which you want to accept the payment. The default length is 3 characters. Refer to the list of supported currencies.
receipt optionalstring Receipt number that corresponds to this order, set for your internal reference. Can have a maximum length of 40 characters and has to be unique.notes optionaljson object Key-value pair that can be used to store additional information about the entity. Maximum 15 key-value pairs, 256 characters (maximum) each. For example, "note_key": "Beam me up Scottyâ.partial_payment optionalboolean Indicates whether the customer can make a partial payment. Possible values:
true : The customer can make partial payments.
false (default) : The customer cannot make partial payments.
first_payment_min_amount optionalinteger Minimum amount that must be paid by the customer as the first partial payment. For example, if an amount of â¹700.00 is to be received from the customer in two installments of #1 - â¹500.00, #2 - â¹200.00, then you can set this value as 50000. This parameter should be passed only if partial_payment is true.
Response Parameters
Descriptions for the response parameters are present in the Orders Entity parameters table.
Error Response Parameters
Given below is a list of possible errors you may face while creating an order.
ErrorCauseSolutionThe API <key/secret> provided is invalid.The API credentials passed in the API call differ from the ones generated on the Dashboard. Different keys for test mode and live modes.Expired API key.The API keys must be active and entered correctly with no whitespace before or after the keys.The amount must be atleast INR 1.00.The amount specified is less than the minimum amount. Currency subunits, such as paise (in the case of INR), should always be greater than 100.Enter an amount equal to or greater than the minimum amount, that is 100.The field name is requiredA mandatory field is missing.Ensure all mandatory fields and values are present.
Fetch Orders
The following endpoint retrieves the details of all the orders that you created:
GET /orders
Handy TipsIn this example, count and skip query parameters have been used. You can invoke this API without these query parameters as well.
CurlJavaPythonGoPHPRubyNode.jscopycurl -u [YOUR_KEY_ID]:[YOUR_KEY_SECRET]\-X GET https://api.razorpay.com/v1/orders?count=2&skip=1
Success ResponseFailure Responsecopy{  "entity": "collection",  "count": 2,  "items": [    {      "id": "order_EKzX2WiEWbMxmx",      "entity": "order",      "amount": 1234,      "amount_paid": 0,      "amount_due": 1234,      "currency": "INR",      "receipt": "Receipt No. 1",      "offer_id": null,      "status": "created",      "attempts": 0,      "notes": [],      "created_at": 1582637108    },    {      "id": "order_EAI5nRfThga2TU",      "entity": "order",      "amount": 100,      "amount_paid": 0,      "amount_due": 100,      "currency": "INR",      "receipt": "Receipt No. 1",      "offer_id": null,      "status": "created",      "attempts": 0,      "notes": [],      "created_at": 1580300731    }  ]}
Query Parameters
authorizedoptionalboolean Possible values:
1 : Retrieves Orders for which payments have been authorized. Payment and order states differ. Know more about payment states.
0 : Retrieves orders for which payments have not been authorized.
receiptoptionalstring Retrieves the orders that contain the provided value for receipt.fromoptionalinteger Timestamp (in Unix format) from when the orders should be fetched.tooptionalinteger Timestamp (in Unix format) up till when orders are to be fetched.countoptionalinteger The number of orders to be fetched. The default value is 10. The maximum value is 100. This can be used for pagination, in combination with skip.skipoptionalinteger The number of orders to be skipped. The default value is 0. This can be used for pagination, in combination with count.
expand[]optionalarray Used to retrieve additional information about the payment. Using this parameter will cause a sub-entity to be added to the response.
Supported values are:
payments: Returns a collection of all payments made for each order.
payments.card: Returns the card details of each payment made for each order.
transfers: Returns a collection of transfers created for each order. For more information about creating transfers using orders, refer to the Transfers section of the Route API documentation.
virtual_account: Returns the virtual account details created for each order. For more information about creating Virtual Accounts, refer to the Smart Collect API documentation.

Examples
The expand[] parameter on the Orders endpoint returns expandable fields in the response:
expand[]=paymentsUsed to expand the payments made for an order.expand[]=payments.cardUsed to expand the details of the card used for making the payment for each order.
Expanded PaymentsExpanded CardsResponsecopycurl -u [YOUR_KEY_ID]:[YOUR_KEY_SECRET]-X GET https://api.razorpay.com/v1/orders/?expand[]=payments
Response Parameters
Descriptions for the response parameters are present in the Orders Entity parameters table.
Error Response Parameters
Given below is a list of possible errors you may face while fetching orders.
ErrorCauseSolutionThe API <key/secret> provided is invalid.The API credentials passed in the API call differ from the ones generated on the Dashboard. Different keys for test mode and live modes.Expired API key.The API keys must be active and entered correctly with no whitespace before or after the keys.
Fetch an Order With id
The following endpoint retrieves details of a particular order as per the id.
GET /orders/:id 
CurlJavaPythonGoPHPRubyNode.jscopycurl -u [YOUR_KEY_ID]:[YOUR_KEY_SECRET]\-X GET https://api.razorpay.com/v1/orders/order_DaaS6LOUAASb7Y \
Success ResponseFailure Responsecopy{    "id": "order_JfOO8JYmAtYRL0",    "entity": "order",    "amount": 2000,    "amount_paid": 0,    "amount_due": 2000,    "currency": "INR",    "receipt": null,    "offer_id": "offer_JGQvQtvJmVDRIA",    "offers": [        "offer_JGQvQtvJmVDRIA"    ],    "status": "created",    "attempts": 0,    "notes": [],    "created_at": 1654776878}
Path Parameter
id mandatorystring Unique identifier of the order to be retrieved.
Response Parameters
Descriptions for the response parameters are present in the Orders Entity parameters table.
Error Response Parameters
Given below is a list of possible errors you may face while fetching an order with Order id.
ErrorCauseSolutionThe API <key/secret> provided is invalid.The API credentials passed in the API call differ from the ones generated on the Dashboard. Different keys for test mode and live modes.Expired API key.The API keys must be active and entered correctly with no whitespace before or after the keys.id is not a valid idThe order_id passed is invalid.Use a valid order_id .The id provided does not existThe order_id does not exist or does not belong to the requestor.Ensure that you use a valid order_id that belongs to the requestor.
Fetch Payments for an Order
The following endpoint retrieves payments for a particular order:
GET /orders/:id/payments
You can retrieve all the payments made for an order. The response contains all the authorised or failed payments for that order.
CurlJavaPythonGoPHPRubyNode.jsResponsecopycurl -u [YOUR_KEY_ID]:[YOUR_KEY_SECRET]\
-X GET https://api.razorpay.com/v1/orders/order_DaaS6LOUAASb7Y/payments \
Path Parameter
id mandatorystring Unique identifier of the order for which the payments should be retrieved.
Response Parameters
Descriptions for the response parameters are present in the Orders Entity parameters table.
Update Order
The following endpoint helps you modify the notes field in a particular order:
PATCH/orders/:id/
You can modify an existing order to update the Notes field only. Notes can be used to record additional information about the order. A key-value store, the notes field can have a maximum of 15 key-value pairs, each of 256 characters (maximum).
CurlJavaPythonGoPHPRubyNode.jscopycurl -u [YOUR_KEY_ID]:[YOUR_KEY_SECRET]\-X PATCH https://api.razorpay.com/v1/orders/order_DaaS6LOUAASb7Y \-d '{  "notes": {    "key1": "value3",    "key2": "value2"  }}'
Success ResponseFailure Responsecopy{  "id":"order_DaaS6LOUAASb7Y",  "entity":"order",  "amount":2200,  "amount_paid":0,  "amount_due":2200,  "currency":"INR",  "receipt":"Receipt #211",  "offer_id":null,  "status":"attempted",  "attempts":1,  "notes": {    "key1": "value3",    "key2": "value2"  },  "created_at":1572505143}
Path Parameter
id mandatorystring Unique identifier of the order in which the Notes field must be updated.
Request Parameter
notes mandatoryjson object Key-value pair that can be used to store additional information about the entity. Maximum 15 key-value pairs, 256 characters (maximum) each. For example, "note_key": "Beam me up Scottyâ.
Response Parameters
Descriptions for the response parameters are present in the Orders Entity parameters table.
Error Response Parameters
Given below is a list of possible errors you may face while updating an order.
ErrorCauseSolutionThe API <key/secret> provided is invalid.The API credentials passed in the API call differ from the ones generated on the Dashboard. Different keys for test mode and live modes.Expired API key.The API keys must be active and entered correctly with no whitespace before or after the keys.id is not a valid idThe order_id passed is invalid.Use a valid order_id .The id provided does not existThe order_id does not exist or does not belong to the requestor.Ensure that you use a valid order_id that belongs to the requestor.
Webhooks
Set up Razorpay Webhooks to configure and receive notifications when a specific event occurs. When one of these events is triggered, we send an HTTP POST payload in JSON to the webhook's configured URL.
SUBSCRIBE TO DEVELOPER UPDATESSubscribeAPI Reference GuideIntegrationsSupportON THIS PAGEOrders APIUse CasesOrder EntityCreate an OrderRequest ParametersResponse ParametersError Response ParametersFetch OrdersQuery ParametersExamplesResponse ParametersError Response ParametersFetch an Order With idPath ParameterResponse ParametersError Response ParametersFetch Payments for an OrderPath ParameterResponse ParametersUpdate OrderPath ParameterRequest ParameterResponse ParametersError Response ParametersWebhooks