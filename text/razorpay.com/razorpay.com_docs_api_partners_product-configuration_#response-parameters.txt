





Product Configuration APIs | Razorpay DocsPricingAPI ReferenceSupportLog InSign UpHomeGet StartedPaymentsBanking PlusPartnersDeveloper ToolsAPI Reference GuideGet Started with APIsOrdersPaymentsSettlementsRefundsDisputesCustomersPayments SuitePartnersSub-Merchant OnboardingAccountProduct ConfigurationStakeholderTerms and ConditionsDocumentWebhooksGeneric API ErrorsRazorpayXErrorsWebhooksApiPartnersProduct ConfigurationProduct Configuration APIsUse the Product Configuration APIs to enable sub-merchants request for a product.You can use the Product Configuration APIs to configure and activate Razorpay products for a sub-merchant account according to their requirements. For example, if you need our Payment Gateway product for all sub-merchants or Payment Gateway for one sub-merchant and Payment Link product for another sub-merchant, you can do so using this API.
You can create, fetch and update product configuration requests using these APIs.
You can even accept terms and conditions for the requested product using these APIs. You can fetch the terms and conditions using the Fetch Terms and Conditions API.
Handy Tips

In the requirements section of Documents API, depending upon the requirement, you can classify it into two types:


Required document: field_reference: "proof_type.document_type"
Example: business_proof_of_identification.business_pan_url.
This means as a sub-merchant you need to upload the business_pan_url document in order to get the requirement fulfilled.


Selected required document: field_reference : "proof_type"
Example: individual_proof_of_address.
This means as a merchant you can upload from ONE of the following groups, that is  submit [aadhar_front ,aadhar_back] or [voter_id_front, voter_id_back] or [passport_front, passport_back]. Once all the documents from any ONE of the groups are uploaded, the requirement gets fulfilled.




The products Payment Links and Payment Gateway have similar requirements. If a requirement is submitted through a product configuration for payment_gateway, the same will be applicable for other product configurations, such as payment_links, and vice versa.


You can try out our APIs on the Razorpay Postman Public Workspace.

Product Configuration Entity
The Product entity consists of the following fields. You can find the JSON sample entity on the right side.
idstring The unique identifier of a product generated by Razorpay for a sub-merchant account. This id is used to fetch or update a product.product_namestring The product(s) to be configured. Possible values:
payment_gateway
payment_links
tncobject It consists of the configuration for the accepted terms and conditions by the merchant for the requested product. If the terms and conditions are accepted by the user for the requested product, it would consist of the following fields:idstring The unique identifier representing the acceptance of terms and conditions for a product by a user.acceptedboolean The flag that represents whether the terms and conditions are accepted by the user.accepted_atinteger The Unix timestamp at which the terms and conditions were accepted by the user for the requested product.activation_statusstring The status of the product activation.
requested
needs_clarification
under_review
activated
suspended
configurationThe following are the possible configurations:payment_methodsobject The payment methods configured, such as, netbanking, UPI, Wallet and EMI.upiobject The UPI type payment method.statusstring The status of UPI payment method.instrumentarray The list of UPI instruments requested or enabled.netbankingobject The netbanking type payment method.statusstring The status of the netbanking payment method.instrumentarray The netbanking instrument object.typestring The type of netbanking payment method. Possible values:
Retail
Corporate
bankarray The list of netbanking banks requested or enabled. Refer the Appendix page for netbanking bank codes.walletobject The Wallet type payment method.statusstring The status of the Wallet payment method.instrumentarray The list of Wallet instruments requested or enabled.emistring The EMI type payment method.statusstring The status of EMI payment method.instrumentarray The EMI instrument object.typestring The type of EMI payment method. Possible values:
card_emi
cardless_emi
partnerarray The list of EMI partners requested or enabled. Possible values:
For card_emi: debit and credit.
For cardless_emi: zestmoney and earlysalary.
paylaterobject The payment method to be enabled.enabledboolean Enables or disables the payment method. Possible values:
true: Enables the paylater payment method.
false: Does not enable the paylater payment method.
instrumentstring The Paylater service provider. Possible values are:
epaylater
getsimpl
payment_captureobject The payment capture settings object.modestring The mode through which payment capture is done. Possible values:
automatic: Payments are auto-captured (default)
manual: You have to manually capture payments using our Capture API or from the Partner's Dashboard.
automatic_expirynumeric This denotes the time in minutes when the payment is in the authorized state. This is auto-captured.manual_expirynumeric This denotes the time in minutes until you can manually capture payments in the authorized state.
Must be equal to or greater than the automatic_expire_period value.
The default and the maximum value is 7200 minutes.
The payments in the authorized state after the manual_expire_period are auto-refunded.
settlementsobject The Settlement settings object.account_numberstring The bank account number to which settlements are made. Account details can be found on the Partner's Razorpay Dashboard. For example, 7878780080316316.ifsc_codestring The IFSC associated with the bank account. For example, RATN0VAAPIS.beneficiary_namestring The name of the beneficiary associated with the bank account.Handy TipThis API parameter is needed complete the KYC process. However, it is optional for this API.refundobject This denotes the payment refund settings.default_refund_speedstring Speed at which the refund is to be processed. Possible values are:
normal: Indicates that the refund will be processed at the normal speed. By default, the refund will take 5-7 working days.
optimum: Indicates that the refund will be processed at an optimal speed based on Razorpay's internal fund transfer logic. That is:

If the refund can be processed instantly, Razorpay will initiate the process irrespective of the payment method used to make the payment.
If an instant refund is not made, Razorpay will initiate a refund that is processed at the normal speed. For example, payments made using debit cards, netbanking or unsupported credit cards.


checkoutobject The checkout form of the payment capture.theme_colorstring The theme color for sub-merchant's checkout pagelogostring The logo of the sub-merchant's business on the checkout page.flash_checkoutboolean The flagging options Enable or Disable for Razorpay's Flash Checkout to securely save the card details of your customers.notificationsobject This denotes the notifications settings.emailstring The email addresses that will receive notifications regarding payments, settlements, daily payment reports, webhooks, and so on.whatsappboolean The WhatsApp notifications you receive regarding payments, settlements, daily payment reports, webhooks, etc.smsboolean The SMS notifications you receive regarding payments, settlements, daily payment reports, webhooks, etc. This attribute will be set to false.requested_configurationobject The configuration of the product requested by the user that is yet to be set as active.active_configurationobject The configuration of the product that has been set as active.requirementsobject The list of requirements to be enabled for this product or some of the configurations under this product.field_referencestring The field which is in issue or missing. The JSON key path in resolution URL.resolution_urlstring The URL to address the requirement. The API endpoint to be used for updating missing fields or documents.statusstring The status of the requirement.reason_codestring The reason code for showing in the requirement. Description will be sent only when reason code is "". Possible values are:
field_missing
needs_clarification
document_missing
descriptionstring This parameter is displayed when the reason_code is needs_clarification.requested_atinteger The Unix timestamp at which the product configuration is requested.
PG Sample EntityPL Sample Entitycopy{  "requested_configuration": [],  "active_configuration": {    "payment_capture": {      "mode": "automatic",      "refund_speed": "normal",      "automatic_expiry_period": 7200    },    "settlements": {      "account_number": "1234567890",      "ifsc_code": "HDFC0000317",      "beneficiary_name": "Gaurav Kumar"    },    "checkout": {      "theme_color": "#528FFF",      "flash_checkout": true,      "logo": "https://example.com/your_logo"    },    "refund": {      "default_refund_speed": "optimum"    },    "notifications": {      "whatsapp": false,      "sms": false,      "email": [        "gaurav.kumar@example.com",        "acd@example.com"      ]    }  },  "requirements": [    {      "field_reference": "settlements.account_number",      "resolution_url": "/accounts/acc_HQVlm3bnPmccC0/products/acc_prd_HEgNpywUFctQ9e",      "reason_code": "field_missing",      "status": "required"    },    {      "field_reference": "settlements.ifsc",      "resolution_url": "/accounts/acc_HQVlm3bnPmccC0/products/acc_prd_HEgNpywUFctQ9e",      "reason_code": "field_missing",      "status": "required"    },    {      "field_reference": "settlements.beneficiary_name",      "resolution_url": "/accounts/acc_HQVlm3bnPmccC0/products/acc_prd_HEgNpywUFctQ9e",      "reason_code": "field_missing",      "status": "required"    }  ],  "tnc":{    "id": "tnc_IgohZaDBHRGjPv",    "accepted": true,    "accepted_at": 1641550798  },  "id": "acc_prd_HEgNpywUFctQ9e",  "account_id": "acc_HQVlm3bnPmccC0",  "product_name": "payment_gateway",  "activation_status": "needs_clarification",  "requested_at": 1605181524}
Request a Product Configuration
You can even accept terms and conditions for the requested product using these APIs.
Handy TipsAs a partner, you can fetch the Razorpay terms and conditions using the Fetch Terms and Conditions API.
Use the following API endpoint to request for a product configuration:
POST/accounts/:account_id/products
PG RequestPL RequestPG ResponsePL Responsecopycurl -u <YOUR_KEY_ID>:<YOUR_KEY_SECRET> \-X POST https://api.razorpay.com/v2/accounts/acc_HQVlm3bnPmccC0/products \-H "Content-Type: application/json" \-d '{  "product_name": "payment_gateway",  "tnc_accepted": true,  "ip": "233.233.233.234"}'
Path Parameter
account_idstring The unique identifier of the sub-merchant account generated by Razorpay. For example, acc_HQVlm3bnPmccC0. This id is used to fetch or update a product. The product is created for this sub-merchant account id.
Request Parameter
product_name mandatorystring The product(s) to be configured. Possible values:
payment_gateway
payment_links
tnc_accepted optionalboolean Pass this parameter to accept terms and conditions. Send this parameter along with the ip parameter when the tnc is accepted. Possible values:
true
ip optionalstring The IP address of the merchant while accepting the terms and conditions. Send this parameter along with the tnc_accepted parameter when the tnc is accepted.
Response Parameters
requested_configurationobject The configuration of the product requested by the user that is yet to be set as active.tncobject It consists of the configuration for the accepted terms and conditions by the merchant for the requested product. If the terms and conditions are accepted by the user for the requested product, it would consist of following fields:idstring The unique identifier representing the acceptance of terms and conditions for a product by a user.acceptedboolean The flag that represents whether the terms and conditions were accepted by the user.accepted_atinteger The Unix timestamp at which the terms and conditions were accepted by the user for the requested product.active_configurationobject The configuration of the product that has been set as active.payment_captureobject The Payment Capture Settings Objectmodestring The mode through which payment capture is done. Possible values:
automatic: Payments are auto-captured (default)
manual: You have to manually capture payments using our Capture API or from the Partner's Dashboard.
automatic_expirynumeric This denotes the time in minutes when the payment is in the authorized state. This is auto-captured.manual_expirynumeric This denotes the time in minutes until you can manually capture payments in the authorized state.
Must be equal to or greater than the automatic_expire_period value.
The default and the maximum value is 7200 minutes.
The payments in the authorized state after the manual_expire_period are auto-refunded.
settlementsobject The Settlement settings object.
account_number
: string The bank account number to which settlements are made. Account details can be found on the Partner's Razorpay Dashboard. For example, 7878780080316316.ifsc_codestring The IFSC associated with the bank account. For example, RATN0VAAPIS.beneficiary_namestring The name of the beneficiary associated with the bank account.checkoutobject The checkout form of the payment capture.theme_colorstring The theme color for sub-merchant's checkout page.logostring The logo of the sub-merchant's business on the checkout page.flash_checkoutboolean The flagging options Enable or Disable for Razorpay's Flash Checkout to securely save the card details of your customers.refundobject This denotes the payment refund settings.default_refund_speedstring Speed at which the refund is to be processed. Possible values are:
normal: Indicates that the refund will be processed via the normal speed. By default, the refund will take 5-7 working days.
optimum: Indicates that the refund will be processed at an optimal speed based on Razorpay's internal fund transfer logic. That is:
If the refund can be processed instantly, Razorpay will initiate the process irrespective of the payment method used to make the payment.
If an instant refund is not made, Razorpay will initiate a refund that is processed at the normal speed. For example, payments made using debit cards, netbanking or unsupported credit cards.
notificationsobject This denotes the notifications settings.emailstring The email addresses that will receive notifications regarding payments, settlements, daily payment reports, webhooks, and so on.whatsappboolean The WhatsApp notifications you receive regarding payments, settlements, daily payment reports, webhooks, etc.smsboolean The SMS notifications you receive regarding payments, settlements, daily payment reports, webhooks, etc. This attribute will be set to false.payment_methodsobject Details of the payment method you want to enable for the product.netbankingobject The payment method to be enabled.enabledboolean Enables or disables the payment method. Possible values:
true: Enables the netbanking payment method.
false: Does not enable the netbanking payment method.
instrumentobject Details regarding the bank. Possible value:typestring The type of bank. Possible values are retail and corporate.bankstring The bank code. Refer to the list of bank codes.cardobject The payment method to be enabled.enabledboolean Enables or disables the payment method. Possible values:
true: Enables the card payment method.
false: Does not enable the card payment method.
instrumentobject Details regarding the card. Possible value:typestring Possible value is domestic.issuerstring The card issuer. Possible values for issuer are:
amex
dicl
maestro
mastercard
rupay
visa
walletobject The payment method to be enabled.enabledboolean Enables or disables the payment method. Possible values:
true: Enables the wallet payment method.
false: Does not enable the wallet payment method.
instrumentstring The wallet issuer. Possible values are:
airtelmoney
amazonpay
freecharge
jiomoney
mobiwik
mpesa
olamoney
paytm
payzapp
payumoney
phonepe
phonepeswitch
sbibuddy
upiobject The payment method to be enabled.enabledboolean Enables or disables the payment method. Possible values:
true: Enables the upi payment method.
false: Does not enable the upi payment method.
instrumentstring The UPI service provider. Possible values are:
google_pay
upi
paylaterobject The payment method to be enabled.enabledboolean Enables or disables the payment method. Possible values:
true: Enables the paylater payment method.
false: Does not enable the paylater payment method.
instrumentstring The Paylater service provider. Possible values are:
epaylater
getsimpl
emiobject The payment method to be enabled.enabledboolean Enables or disables the payment method. Possible values:
true: Enables the paylater payment method.
false: Does not enable the paylater payment method.
instrumentobject The EMI instrument object.typestring The type of EMI payment method. Possible values:
card_emi
cardless_emi
partnerstring The list of EMI partners requested or enabled. Possible values:
For card_emi: debit and credit.
For cardless_emi: zestmoney and earlysalary.
requirementsobject The list of requirements to be enabled for this product or some of the configurations under this product.field_referencestring The field which is in issue or missing. The JSON key path in resolution URL.resolution_urlstring The URL to address the requirement. The API endpoint to be used for updating missing fields or documents.statusstring The status of the requirement.reason_codestring The reason code for showing in the requirement. Possible values are:
field_missing
needs_clarification
document_missing
idstring The unique identifier of the sub-merchant product account generated by Razorpay. For example, acc_prd_HEgNpywUFctQ9e. The product is created for this sub-merchant account id.account_idstring The unique identifier of the sub-merchant generated by Razorpay. For example, acc_HQVlm3bnPmccC0.product_namestring The product(s) to be configured. Possible values:
payment_gateway
payment_links
activation_statusstring The status of the product activation.
requested
needs_clarification
under_review
activated
suspended
requested_atinteger The Unix timestamp at which the product configuration has been requested.
Error Response Parameters
Know about the various error responses for this API.
Update a Product Configuration
Use the following endpoint to update a product's configuration:
PATCH/accounts/:account_id/products/:product_id
Watch Out!Currently, we do not support making concurrent requests to the following Onboarding APIs including their combination on the same account_id:

Update Account API


Update Stakeholder API


Update Product Configuration API

Please wait for the response of these APIs before making subsequent requests.
Use Cases
You can update the following details for Payment Gateway and Payment Links using the Update a Product Configuration API. However, whether the details can be updated or not depends upon the product activation status.


Settlement Bank Account Details: You can update the settlement object with the new bank account details based on the product activation status.


Request Additional Payment Methods: You can request various payment methods and related instruments to be enabled using the payment_methods object. However, you can request for only one payment method at a time. For example, if you want to enable HDFC Netbanking and Rupay Domestic Card payment methods, you should send two separate API requests. You cannot send a consolidated request using this API.


Update Notifications Settings: You can update the email, WhatsApp and SMS settings using the notifications object.


Configure Checkout Features: You can change the checkout theme colour, add a logo and enable the saving of customer card details using the checkout object.


Configure Refund Speed: You can configure the default refund speed using the refund object.


Accept of Terms and Conditions: You can accept Razorpay terms and conditions.


Product Activation Status
Activation StatusUpdate PermittedrequestedYou can update the details for all the fields.needs_clarificationThe fields you can update depend on the reason_code mentioned in the requirements object in the Request a Product Activation API : document_missing or field_missing: You can update all the fields.needs_clarification: You can update only the specific field for which Razorpay is seeking clarification for.under_reviewYou cannot update any fields.activatedYou cannot use this API to update any fields as your account is already active.
Sample Code for Updating Settlement Account Details
Given below is the sample code for requesting the Payment Gateway and Payment Links products. In this sample, the payment methods object has not been used.
PGPLResponsecopycurl -u <YOUR_KEY_ID>:<YOUR_KEY_SECRET> \-X PATCH https://api.razorpay.com/v2/accounts/acc_HQVlm3bnPmccC0/products/acc_prd_HEgNpywUFctQ9e/ \-d '{  "notifications": {    "email": [      "gaurav.kumar@example.com",      "acd@gmail.com"    ]  },  "checkout": {    "theme_color": "#528FFF"  },  "refund": {    "default_refund_speed": "optimum"  },  "settlements": {    "account_number": "1234567890",    "ifsc_code": "HDFC0000317",    "beneficiary_name": "Gaurav Kumar"  },  "tnc_accepted": true,  "ip": "233.233.233.234"}'
Sample Code for Requesting Payment Methods
Given below is the Payment Gateway product sample code when you request for a specific payment method.  Here the payment_method object is used.
Watch Out!You can send request for only one payment method at a time. For example, if you want to enable HDFC Netbanking and Rupay Domestic Card payment methods, you should send two separate API requests. You cannot send a consolidated request using this API.
NetbankingCardWalletUPIPaylaterEMIResponsecopycurl -u <YOUR_KEY_ID>:<YOUR_KEY_SECRET> \-X PATCH https://api.razorpay.com/v2/accounts/acc_HQVlm3bnPmccC0/products/acc_prd_HEgNpywUFctQ9e/ \-d '{  "notifications": {    "email": [      "gaurav.kumar@example.com",      "acd@gmail.com"    ]  },  "checkout": {    "theme_color": "#528FFF"  },  "refund": {    "default_refund_speed": "optimum"  },  "settlements": {    "account_number": "1234567890",    "ifsc_code": "HDFC0000317",    "beneficiary_name": "Gaurav Kumar"  },  "payment_methods": {    "netbanking": {      "enabled": true,      "instrument": {        "type": "retail",        "bank": "utib"      }    }  },  "tnc_accepted": true,  "ip": "233.233.233.234"}'
Path Parameters
account_id mandatorystring The unique identifier of a sub-merchant account generated by Razorpay. For example, acc_HQVlm3bnPmccC0.id mandatorystring The unique identifier of a product generated by Razorpay. For example, acc_prd_HEgNpywUFctQ9e.
Request Parameters
notifications optionalobject This denotes the notifications settings.emailstring The email addresses that will receive notifications regarding payments, settlements, daily payment reports, webhooks, and so on.whatsappboolean The WhatsApp notifications you receive regarding payments, settlements, daily payment reports, webhooks, etc.smsboolean The SMS notifications you receive regarding payments, settlements, daily payment reports, webhooks, etc. This attribute will be set to false.checkout optionalobject The checkout form of the payment capture.theme_colorstring The theme color for sub-merchant's checkout pagelogostring The logo of the sub-merchant's business on the checkout page.flash_checkoutboolean The flagging options Enable or Disable for Razorpay's Flash Checkout to securely save the card details of your customers.refund optionalobject This denotes the payment refund settings.default_refund_speedstring Speed at which the refund is to be processed. Possible values are:
normal: Indicates that the refund will be processed at normal speed. By default, the refund will take 5-7 working days.
optimum: Indicates that the refund will be processed at an optimal speed based on Razorpay's internal fund transfer logic. That is:

If the refund can be processed instantly, Razorpay will initiate the process irrespective of the payment method used to make the payment.
If an instant refund is not made, Razorpay will initiate a refund that is processed at the normal speed. For example, payments made using debit cards, netbanking or unsupported credit cards.


settlements conditionalobject The Settlement settings object.account_numberstring The bank account number to which settlements are made. Account details can be found on the Partner's Razorpay Dashboard. For example, 7878780080316316.ifsc_codestring The IFSC associated with the bank account. For example, RATN0VAAPIS.beneficiary_namestring The name of the beneficiary associated with the bank account.tnc_accepted optionalboolean Pass this parameter to accept terms and conditions. Send this parameter along with the ip parameter when the tnc is accepted. Possible values:
true
ip optionalstring The IP address of the merchant while accepting the terms and conditions. Send this parameter along with the tnc_accepted parameter when the tnc is accepted.payment_methods optionalobject Details of the payment method you want to enable for the product.netbankingobject The payment method to be enabled.enabledboolean Enables or disables the payment method. Possible values:
true: Enables the netbanking payment method.
false: Does not enable the netbanking payment method.
instrumentobject Details regarding the bank. Possible value:typestring The type of bank. Possible values are retail and corporate.bankstring The bank code. Refer to the list of bank codes.cardobject The payment method to be enabled.enabledboolean Enables or disables the payment method. Possible values:
true: Enables the card payment method.
false: Does not enable the card payment method.
instrumentobject Details regarding the card. Possible value:typestring Possible value is domestic.issuerstring The card issuer. Possible values for issuer are:
amex
dicl
maestro
mastercard
rupay
visa
walletobject The payment method to be enabled.enabledboolean Enables or disables the payment method. Possible values:
true: Enables the wallet payment method.
false: Does not enable the wallet payment method.
instrumentstring The wallet issuer. Possible values are:
airtelmoney
amazonpay
freecharge
jiomoney
mobiwik
mpesa
olamoney
paytm
payzapp
payumoney
phonepe
phonepeswitch
sbibuddy
upiobject The payment method to be enabled.enabledboolean Enables or disables the payment method. Possible values:
true: Enables the upi payment method.
false: Does not enable the upi payment method.
instrumentstring The UPI service provider. Possible values are:
google_pay
upi
paylaterobject The payment method to be enabled.enabledboolean Enables or disables the payment method. Possible values:
true: Enables the paylater payment method.
false: Does not enable the paylater payment method.
instrumentstring The Paylater service provider. Possible values are:
epaylater
getsimpl
emiobject The payment method to be enabled.enabledboolean Enables or disables the payment method. Possible values:
true: Enables the paylater payment method.
false: Does not enable the paylater payment method.
instrumentobject The EMI instrument object.typestring The type of EMI payment method. Possible values:
card_emi
cardless_emi
partnerstring The list of EMI partners requested or enabled. Possible values:
For card_emi: debit and credit.
For cardless_emi: zestmoney and earlysalary.

Error Response Parameters
Know about the various error responses for this API.
Fetch a Product Configuration
Use the following endpoint to retrieve the details of a product for a given sub-merchant's account:
GET/accounts/:account_id/products/:product_id
PG RequestPL RequestPG ResponsePL Responsecopycurl -u <YOUR_KEY_ID>:<YOUR_KEY_SECRET> \- X GET https://api.razorpay.com/v2/accounts/acc_HQVlm3bnPmccC0/products/acc_prd_HEgNpywUFctQ9e/ \
Path Parameters
account_id mandatorystring The unique identifier of a sub-merchant account generated by Razorpay. For example, acc_HQVlm3bnPmccC0.id mandatorystring The unique identifier of a product generated by Razorpay. For example, acc_prd_HEgNpywUFctQ9e.
Error Response Parameters
Know about the various error responses for this API.
SUBSCRIBE TO DEVELOPER UPDATESSubscribeAPI Reference GuideIntegrationsSupportON THIS PAGEProduct Configuration EntityRequest a Product ConfigurationPath ParameterRequest ParameterResponse ParametersError Response ParametersUpdate a Product ConfigurationUse CasesSample Code for Updating Settlement Account DetailsSample Code for Requesting Payment MethodsPath ParametersRequest ParametersError Response ParametersFetch a Product ConfigurationPath ParametersError Response Parameters