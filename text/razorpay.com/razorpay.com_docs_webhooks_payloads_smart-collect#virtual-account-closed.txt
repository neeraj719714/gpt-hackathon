





Smart Collect - Sample Payload | Razorpay DocsPricingAPI ReferenceSupportLog InSign UpHomeGet StartedPaymentsBanking PlusPartnersDeveloper ToolsAPI Reference GuideErrorsWebhooksWebhooksSet Up and Edit WebhooksBest PracticesValidate and Test WebhooksSample PayloadOrdersPaymentsRefundsDisputesInvoicesSubscriptionsPartnersRouteSmart CollectPayment LinksRazorpayXFAQsWebhooksPayloadsSmart CollectSmart Collect - Sample PayloadSample payload for Smart CollectFollowing is the list of currently available webhook events for Smart Collect.
Smart Collect
The table below lists the Webhook events available for Smart Collect (Virtual Account).
Webhook EventDescriptionvirtual_account.createdTriggered when a virtual account is created.virtual_account.creditedTriggered when a payment is made to a virtual account.virtual_account.closedTriggered when a virtual account expires on a date set by you or is manually closed by you.
Smart Collect with TPVIf the TPV feature is enabled for Smart Collect, the webhook payloads described above contain the allowed_payers object parameter.
Virtual Account Created
virtual_account.createdvirtual_account.created with TPVcopy{  "entity": "event",  "account_id": "acc_BFQ7uQEaa7j2z7",  "event": "virtual_account.created",  "contains": [    "virtual_account"  ],  "payload": {    "virtual_account": {      "entity": {        "id": "va_DET8z3wBxfPB5L",        "name": "Acme Corp",        "entity": "virtual_account",        "status": "active",        "description": "Virtual Account to test webhook",        "amount_expected": null,        "notes": {          "Important": "Notes for Internal Reference"        },        "amount_paid": 0,        "customer_id": "cust_BtQNqzmBlAXyTY",        "receivers": [          {            "id": "ba_DET8z5Z5ghv4hW",            "entity": "bank_account",            "ifsc": "RATN0VAAPIS",            "bank_name": "RBL Bank",            "name": "Acme Corp",            "notes": [],            "account_number": "1112220006712324"          },          {            "id": "vpa_DzZcAjcRevv5JO",            "entity": "vpa",            "username": "rpy.payto00000468657501",            "handle": "icici",            "address": "rpy.payto00000468657501@icici"          }        ],        "close_by": null,        "closed_at": null,        "created_at": 1567675923      }    }  },  "created_at": 1567675923}
Virtual Account Credited
bank_transfervpabank_transfer with TPVcopy{  "entity": "event",  "account_id": "acc_BFQ7uQEaa7j2z7",  "event": "virtual_account.credited",  "contains": [    "payment",    "virtual_account",    "bank_transfer"  ],  "payload": {    "payment": {      "entity": {        "id": "pay_DETA2KrOlhqQzF",        "entity": "payment",        "amount": 61900,        "currency": "INR",        "status": "captured",        "order_id": null,        "invoice_id": null,        "international": false,        "method": "bank_transfer",        "amount_refunded": 0,        "amount_transferred": 0,        "refund_status": null,        "captured": true,        "description": "NA",        "card_id": null,        "bank": null,        "wallet": null,        "vpa": null,        "email": "gaurav.kumar@example.com",        "contact": "+919123456789",        "customer_id": "cust_BtQNqzmBlAXyTY",        "notes": [],        "fee": 731,        "tax": 112,        "error_code": null,        "error_description": null,        "created_at": 1567675983      }    },    "virtual_account": {      "entity": {        "id": "va_DET8z3wBxfPB5L",        "name": "Acme Corp",        "entity": "virtual_account",        "status": "active",        "description": "Virtual Account to test webhook",        "amount_expected": null,        "notes": {          "Important": "Notes for Internal Reference"        },        "amount_paid": 61900,        "customer_id": "cust_BtQNqzmBlAXyTY",        "close_by": null,        "closed_at": null,        "created_at": 1567675923,        "receivers": [          {            "id": "ba_DET8z5Z5ghv4hW",            "entity": "bank_account",            "ifsc": "RATN0VAAPIS",            "bank_name": "RBL Bank",            "name": "Acme Corp",            "account_number": "1112220006712324"          }        ]      }    },    "bank_transfer": {      "entity": {        "id": "bt_DETA2KSUJ3uCM9",        "entity": "bank_transfer",        "payment_id": "pay_DETA2KrOlhqQzF",        "mode": "NEFT",        "bank_reference": "156767598340",        "amount": 61900,        "payer_bank_account": {          "id": "ba_DETA2UuuKtKLR1",          "entity": "bank_account",          "ifsc": "KKBK0000007",          "bank_name": "Kotak Mahindra Bank",          "name": "Saurav Kumar",          "account_number": "765432123456789"        },        "virtual_account_id": "va_DET8z3wBxfPB5L"      }    }  },  "created_at": 1567675983}
Virtual Account Closed
virtual_account.closedvirtual_account.closed with TPVcopy{  "entity": "event",  "account_id": "acc_BFQ7uQEaa7j2z7",  "event": "virtual_account.closed",  "contains": [    "virtual_account"  ],  "payload": {    "virtual_account": {      "entity": {        "id": "va_DET8z3wBxfPB5L",        "name": "Acme Corp",        "entity": "virtual_account",        "status": "closed",        "description": "Receive payment instalment from Gaurav Kumar- Flat No 105",        "amount_expected": null,        "notes": [],        "amount_paid": 500,        "customer_id": "cust_BM8NbnFAk1BVDA",        "receivers": [          {            "id": "ba_DzYPeiYdd2RVSc",            "entity": "bank_account",            "ifsc": "RATN0VAAPIS",            "bank_name": "RBL Bank",            "name": "Acme Corp",            "account_number": "1112220006712324"          },          {            "id": "vpa_DzYPeu6ntqxhcE",            "entity": "vpa",            "username": "rpy.payto00000468657501",            "handle": "icici",            "address": "rpy.payto00000468657501@icici"          }        ],        "close_by": 1580491859,        "closed_at": 1567677769,        "created_at": 1567675923      }    }  },  "created_at": 1567677769}
Watch Out!If you have changed your webhook secret, remember to use the old secret for webhook signature validation while retrying older requests. Using the new secret will lead to signature mismatch.
Do Not Parse or Cast the Webhook Request BodyWhile generating a signature at your end, ensure that the webhook body is passed as an argument in the raw webhook request body. Do not parse or cast the webhook request body.
SUBSCRIBE TO DEVELOPER UPDATESSubscribeAPI Reference GuideIntegrationsSupportON THIS PAGESmart CollectVirtual Account CreatedVirtual Account CreditedVirtual Account Closed