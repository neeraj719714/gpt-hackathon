





API | X - Payouts to Cards | Razorpay DocsPricingAPI ReferenceSupportLog InSign UpHomeGet StartedPaymentsBanking PlusPartnersDeveloper ToolsAPI Reference GuideGet Started with APIsOrdersPaymentsSettlementsRefundsDisputesCustomersPayments SuitePartnersRazorpayXGet StartedAccount ValidationContactsFund AccountsPayoutsPayouts to CardsPayout CompositePayout IdempotencyPayout LinksPayout Wallet - AmazonTransactionsWebhooksErrorsWebhooksApiXPayouts CardsPayouts to CardsMake payouts directly to a credit, debit or prepaid card using RazorpayX APIs.With RazorpayX, you can make payouts directly to a credit card, debit card or prepaid card. Making payout to a card is the same as making normal payouts.
Payouts via IMPS, NEFT, and UPI are supported on RazorpayX Lite and Current Account. Payouts via card mode (also known as network rails) are supported only on RazorpayX Lite.
Payouts to Cards API
Watch Out!It is mandatory to allowlist IPs that you use while making payouts via APIs or the request will fail.
You can try out our APIs on the Razorpay Postman Public Workspace.

Prerequisites
Before you create a payout to a card or use the below listed APIs, you must:

Create a Contact.
Create a Fund Account for that contact.

Or, if you already know which Contact and Fund account you want to make the payout to, keep their fund_account_id (fa_00000000000001, for example) and their contact_id (cont_00000000000001, for example) readily available.
You can refer to the Request Parameters of each API for more information.
Use Cases
There are three ways to make a payout to a card after collecting a card number from the customer:

Making payouts to cards via RazorpayX. Here, card numbers will not be saved.
Making a payout to the token via RazorpayX when tokenising the card with non-Razorpay token services.
Making a payout to the token via RazorpayX when tokenising the card with Razorpay TokenHQ.

Watch Out!
Coverage for payouts to tokenised and non-tokenised cards is different.
Payouts to tokenised cards is supported only for limited issuers on Visa and Mastercard.
Payouts to tokenised cards are not supported via bank rails. Its only supported for the mode card.
Please refer to payouts to cards for coverage on payouts via bank modes and card mode.

According to the latest guidelines from RBI, businesses cannot save their customerâs card credentials (card number and other card data) on their own servers.
To save a card number as per RBI guidelines, you can use a tokenization service like Token HQ. Payouts to these tokenised cards can be made using the mode card on RazorpayX.
Feature RequestThis is an on-demand feature and available only to PCI-compliant merchants. To enable this feature, raise a request using the support form on the RazorpayX Dashboard.
Supported Banks and Payout Modes
Know about which banks support payouts to cards.
Handy Tips
If the payouts are made via cards that are not mentioned in the list, the payout creation request will fail.
You can use payouts to cards without a compliance certificate in Test mode upon request.

Payouts to Cards Entity
The Payouts to Cards entity has the following response fields:
idstring The unique identifier linked to the payout. For example, pout_00000000000001.entitystring The entity being created. For example, payout.fund_account_idstring The unique identifier linked to the fund account. For example, fa_00000000000001.fund_accountobject The account to which you want to make the payout.idstring The unique identifier linked to the fund account. For example, fa_00000000000001.account_typestring The type of account linked to the contact id. Here, it will be card.contact_idstring The unique identifier linked to the contact. For example, cont_00000000000001.contactobjectidstring The unique identifier linked to the contact. For example, cont_00000000000001.entitystring The entity being created. Here, it will be contact.namestring The contact's name. For example, Gaurav Kumar.contactstring The contact's phone number. For example, 9123456789.emailstring The contact's email address. For example, gaurav.kumar@example.com.typestring A classification for the contact being created. For example, employee.reference_idstring A user-entered reference for the contact. For example, Acme Contact ID 12345.batch_idstring This parameter is populated if the contact was created as part of a bulk upload. For example, batch_00000000000001.activeboolean Possible values:
true (default): active
false: inactive
notesobject Key-value pair that can be used to store additional information about the entity. Maximum 15 key-value pairs, 256 characters (maximum) each. For example, "note_key": "Beam me up Scottyâ.created_atinteger Timestamp, in Unix, when the contact was created. For example, 1545320320.cardobject The details of the card used.last4string The last 4 digits of the card number. If the input_type = service_provider_token then it is the last 4 digits of the card token.networkstring The network operator that has issued the card. For example, Mastercard, Visa.typestring The type of card. For example, credit or debit.issuerstring The bank that has issued the card. For example, ICIC, HDFC.input_typestring  Possible values:service_provider_token : When the token number used is provided by an external service.card : When a card number is provided.razorpay_token : When the token id used is provided by Razorpay.amountinteger The payout amount, in paise. For example, if you want to transfer â¹10000, pass 1000000. Minimum value 100. Handy TipsThe value passed here does not include fees and tax. Fees and tax, if any, are deducted from your account balance.currencystring The payout currency. Here, it is INR.notesarray of objects Key-value pair that can be used to store additional information about the entity. Maximum 15 key-value pairs, 256 characters (maximum) each. For example, "note_key": "Beam me up Scottyâ.feesinteger The fees for the payout. This field is populated only when the payout moves to the processing state. For example, 5.taxinteger The tax that is applicable for the fee being charged. This field is populated only when the payout moves to the processing state. For example, 1.statusstring The status of the payout. Possible payout states:
queued
pending (if you have Approval Workflow enabled)
rejected (if you have Approval Workflow enabled)
processing
processed
cancelled
reversed
purposestring The purpose of the payout that is being created. The following classifications are available in the system by default:
refund
cashback
payout
salary
utility bill
vendor bill
Handy TipsAdditional purposes for payouts can be created via the Dashboard and then used in the API. However, it is not possible to create a new purpose for the payout via the API.utrstring The unique transaction number linked to a payout. For example, HDFCN00000000001.modestring The mode used to make the payout. Available modes:
NEFT
RTGS
IMPS
UPI
card
Watch Out!The payout modes are case sensitive.reference_idstring Maximum length is 40 characters. A user-generated reference given to the payout. For example, Acme Transaction ID 12345. You can use this field to store your own transaction ID, if any.narrationstring Maximum length 30 characters. Allowed characters: a-z, A-Z, 0-9 and space. This is a custom note that also appears on the bank statement.Handy Tips
If no value is passed for this parameter, it defaults to the Merchant Billing Label.
Ensure that the most important text forms the first 9 characters as banks may truncate the rest as per their standards.
batch_idstring This parameter is populated if the contact was created as part of a bulk upload. For example, batch_00000000000001.status_detailsobject This parameter returns the current status of the payout. For example, IMPS is not enabled on beneficiary account, Retry with different mode.descriptionstring A description for the error. For example, IMPS is not enabled on beneficiary account, please retry with different mode.sourcestring Possible values:
gateway: Technical error at Razorpay Partner bank.
beneficiary_bank: Technical error at beneficiary bank.
business: Merchant action required.
internal: Technical error at Razorpay's server.
reasonstring The error reason. For example, imps_not_allowed. Payout Status Details and Next Steps.created_atinteger Timestamp, in Unix, when the contact was created. For example, 1545320320.fee_typestring Indicates the fee type charged for the payout. Possible value is free_payout.
Sample Entitycopy{  "id": "pout_00000000000001",  "entity": "payout",  "fund_account_id": "fa_00000000000001",  "fund_account": {    "id": "fa_00000000000001",    "entity": "fund_account",    "contact_id": "cont_00000000000001",    "contact": {      "id": "cont_00000000000001",      "entity": "contact",      "contact": "9876543210",      "email": "gaurav.kumar@example.com",      "type": "employee",      "reference_id": "Acme Contact ID 12345",      "batch_id": null,      "active": true,      "notes": {        "notes_key_1": "Tea, Earl Grey, Hot",        "notes_key_2": "Tea, Earl Greyâ¦ decaf."      },      "created_at": 1580817353    },    "account_type": "card",    "card": {      "last4": "6789",      "network": "Visa",      "type": "credit",      "issuer": "HDFC",      "input_type": "card"    },    "batch_id": null,    "active": true,    "created_at": 1581080272  },  "amount": 1000000,  "currency": "INR",  "notes": {    "notes_key_1": "Beam me up Scotty",    "notes_key_2": "Engage"  },  "fees": 590,  "tax": 90,  "status": "processed",  "purpose": "payout",  "utr": null,  "mode": "NEFT",  "reference_id": "Acme Transaction ID 12345",  "narration": "Acme Corp Fund Transfer",  "batch_id": null,  "failure_reason": null,  "created_at": 1581499319,  "fee_type": "",  "error": {    "description": null,    "source": null,    "reason": null  }}
Payouts to Cards
You can create payouts to cards without saving the card numbers using Composite API.
Watch Out!
Payouts to cards via standalone Payout API are not allowed when the card number is passed in the API request.
Card numbers, expiry details and cardholder names are in compliance with the RBI guidelines.
Supported modes are IMPS, NEFT, UPI and card.
In case a payout fails, please collect the card details from the customer and re-initiate the payout.
Know about the Payout to Cards errors.

Before you fire the API, ensure you have your API Key id and Key Secret readily available. You can generate your API keys in RazorpayX in live mode or in test mode from the RazorpayX Dashboard. You cannot use your test mode API keys to make live transactions and vice versa.
With the following endpoint, you can make payouts to cards without saving the card number.
POST/v1/payouts
RequestResponsecopycurl -u <YOUR_KEY>:<YOUR_SECRET> \-X POST https://api.razorpay.com/v1/payouts \-H "Content-Type: application/json" \-d '{  "account_number": "7878780080316316",  "amount": 1000000,  "currency": "INR",  "mode": "NEFT",  "purpose": "refund",  "fund_account": {    "account_type": "card",    "card": {      "number": "765432123456789",      "name": "Gaurav Kumar",      "input_type": "card"    },    "contact": {      "email": "gaurav.kumar@example.com",      "contact": "9876543210",      "type": "employee",      "reference_id": "Acme Contact ID 12345",      "notes": {        "notes_key_1": "Tea, Earl Grey, Hot",        "notes_key_2": "Tea, Earl Greyâ¦ decaf."      }    }  },  "queue_if_low_balance": true,  "reference_id": "Acme Transaction ID 12345",  "narration": "Acme Corp Fund Transfer",  "notes": {    "notes_key_1": "Beam me up Scotty",    "notes_key_2": "Engage"  }}'
Request Parameters
account_numbermandatorystring The account from which you want to make the payout.Account details can be found on the RazorpayX Dashboard. For example, 7878780080316316.
Pass your customer identifier if you want money to be deducted from RazorpayX Lite.
Pass your Current Account number if you want money to be deducted from your Current Account.
Watch Out!This is not your contact's bank account number. Log in to your RazorpayX Dashboard and go to My Account & Settings â Banking â Customer Identifier.amount mandatoryinteger The payout amount, in paise. For example, if you want to transfer â¹10000, pass 1000000. Minimum value is 100.currency mandatorystring The payout currency. Here, it is INR.modemandatorystring The mode to be used to create the payout. Available modes:
NEFT
RTGS
IMPS
UPI
card
Watch Out!The payout modes are case sensitive. When creating payouts using APIs, ensure payout modes are entered in upper case.purposemandatorystring The purpose of the payout that is being created. The following classifications are available in the system by default:
refund
cashback
payout
salary
utility bill
vendor bill
Handy TipsAdditional purposes for payouts can be created via the Dashboard and then used in the API. However, it is not possible to create a new purpose for the payout via the API.queue_if_low_balanceoptionalboolean Possible values:
true : The payout is queued when your business account does not have sufficient balance to process the payout.
false (default) : The payout is never queued. The payout fails if your business account does not have sufficient balance to process the payout.
fund_account mandatoryobject The account to which you want to make the payout.account_type mandatorystring The type of account linked to the contact id. Here, it will be card.card mandatoryobject The details of the card used.input_type mandatorystring Here, the value is card.number mandatorystring Same field can accept card numbers or card tokens.name optionalstring The name on the card.expiry_month optionalstring  The expiry month of the entered card.expiry_year optionalstring The expiry year of the entered card.contact mandatoryobject The Contact's details.name mandatorystring Name of the contact. This field is case-sensitive. A minimum of 3 characters and a maximum of 50 characters are allowed. Name cannot end with a special character, except .. Supported characters: a-z, A-Z, 0-9, space, â , - , _ , / , ( , ) and .. For example, Gaurav Kumar.email optionalstring The contact's email address. For example, gaurav.kumar@example.com.contact optionalstring The contact's phone number. For example, 9123456789.type optionalstring Classification for the contact being created. For example, employee. Possible values: vendor, customer, employee, self.reference_id optionalstring A user-generated reference given to the contact. For example, Acme Contact ID 12345. This field can have a maximum length of 40 characters.notes optionalobject Key-value pair that can be used to store additional information about the entity. Maximum 15 key-value pairs, 256 characters (maximum) each. For example, "note_key": "Beam me up Scottyâ.reference_id optionalstring Maximum length is 40 characters. A user-generated reference given to the payout. For example, Acme Transaction ID 12345. You can use this field to store your own transaction ID, if any.narration optionalstring Maximum length 30 characters. Allowed characters: a-z, A-Z, 0-9 and space. This is a custom note that also appears on the bank statement.Handy Tips
If no value is passed for this parameter, it defaults to the Merchant Billing Label.
Ensure that the most important text forms the first 9 characters as banks may truncate the rest as per their standards.
notes optionalarray of objects Key-value pair that can be used to store additional information about the entity. Maximum 15 key-value pairs, 256 characters (maximum) each. For example, "note_key": "Beam me up Scottyâ.
Handy TipsWe highly recommend you get PCI-DSS compliance and make private API calls that are authenticated using your API Key. This helps reduce risks related to security.
Response Parameters
Descriptions for the response parameters are present in the Payouts to Cards Entity parameters table.
Payouts to Tokenised Cards
You can save card numbers and make payouts to it only by creating tokens.
You can create tokens using:

External Tokenization Providers
Razorpay Token HQ

Handy Tips
Payouts via IMPS, NEFT and UPI are not supported via tokenised cards.
Token expiry month and year are mandatory in case of external service provider.

You can create Payouts to Cards using Composite APIs as well.
1. For Tokens Created via External Tokenisation Providers
Create Fund Account
Before you fire the API, ensure you have your API Key id and Key Secret readily available. You can generate your API keys in RazorpayX in live mode or in test mode from the RazorpayX Dashboard. You cannot use your test mode API keys to make live transactions and vice versa.
With the following endpoint, you can create fund account of type card that uses external tokens.
POST/v1/fund_accounts
RequestResponsecopycurl -u <YOUR_KEY>:<YOUR_SECRET> \-X POST https://api.razorpay.com/v1/fund_accounts \-H "Content-Type: application/json" \-d '{  "contact_id": "cont_00000000000001",  "account_type": "card",  "card": {    "number": "4854980604708430",    "expiry_month": "12",    "expiry_year": "21",    "token_provider": "payu",    "input_type": "service_provider_token"  }}'
Request Parameters
contact_id mandatorystring The unique identifier of the contact for which you want to fetch payouts. For example, cont_00000000000001.account_type mandatorystring The type of account linked to the contact id. Here, it will be card.card mandatoryobject The details of the card used.number mandatorystring Same field can accept card numbers or card tokens. Here, the value is card token.expiry_month mandatorystring The expiry month of the card numbers or card token. Here, the value is of card token.expiry_year mandatorystring The expiry year of the card numbers or card token. Here, the value is of card token.input_type mandatorystring Here, the value is service_provider_token.token_provider mandatorystring The name of the aggregator that provided the token.
Response Parameters
Descriptions for the response parameters are present in the Payouts to Cards Entity parameters table.
Create Payout
Before you fire the API, ensure you have your API Key id and Key Secret readily available. You can generate your API keys in RazorpayX in live mode or in test mode from the RazorpayX Dashboard. You cannot use your test mode API keys to make live transactions and vice versa.
With the following endpoint, you can create a payout to external tokens.
POST/v1/payouts
RequestResponsecopycurl -u <YOUR_KEY>:<YOUR_SECRET> \-X POST https://api.razorpay.com/v1/payouts \-H "Content-Type: application/json" \-d '{  "account_number": "7878780080316316",  "fund_account_id": "fa_00000000000001",  "amount": 1000000,  "currency": "INR",  "mode": "card",  "purpose": "refund",  "queue_if_low_balance": true,  "reference_id": "Acme Transaction ID 12345",  "narration": "Acme Corp Fund Transfer",  "notes": {    "notes_key_1": "Tea, Earl Grey, Hot",    "notes_key_2": "Tea, Earl Greyâ¦ decaf."  }}'
Request Parameters
account_number mandatorystring The account from which you want to make the payout. Account details can be found on the RazorpayX Dashboard. For example, 7878780080316316.Watch Out!This is not your contact's bank account number. Log in to your RazorpayX Dashboard and go to My Account & Settings â Banking â Customer Identifier.amount mandatoryinteger The payout amount, in paise. For example, if you want to transfer â¹10000, pass 1000000. Minimum value is 100.currency mandatorystring The payout currency. Here, it is INR.mode mandatorystring The mode to be used to create the payout. Available modes: NEFT, RTGS, IMPS, UPI, Card.purpose mandatorystring The purpose of the payout that is being created. The following classifications are available in the system by default:
refund
cashback
payout
salary
utility bill
vendor bill
Handy TipsAdditional purposes for payouts can be created via the Dashboard and then used in the API. However, it is not possible to create a new purpose for the payout via the API.fund_account_id mandatorystring The unique identifier linked to the fund account.reference_id optionalstring Maximum length is 40 characters. A user-generated reference given to the payout. For example, Acme Transaction ID 12345. You can use this field to store your own transaction ID, if any.narration optionalstring Maximum length 30 characters. Allowed characters: a-z, A-Z, 0-9 and space. This is a custom note that also appears on the bank statement.Handy Tips
If no value is passed for this parameter, it defaults to the Merchant Billing Label.
Ensure that the most important text forms the first 9 characters as banks may truncate the rest as per their standards.
queue_if_low_balance optionalboolean The payout is automatically queued if the account balance is low.
Response Parameters
Descriptions for the response parameters are present in the Payouts to Cards Entity parameters table.
2. For tokens created via Razorpay Token HQ
You can use Razorpay TokenHQ to offer your customers a saved card experience.
You can create payouts to cards using Razorpay Token HQ.
Create Fund Account
Before you fire the API, ensure you have your API Key id and Key Secret readily available. You can generate your API keys in RazorpayX in live mode or in test mode from the RazorpayX Dashboard. You cannot use your test mode API keys to make live transactions and vice versa.
With the following endpoint, you can create fund account fund account of type card that uses Razorpay TokenHQ.
POST/v1/fund_accounts
RequestResponsecopycurl -u <YOUR_KEY>:<YOUR_SECRET> \-X POST https://api.razorpay.com/v1/fund_accounts \-H "Content-Type: application/json" \-d '{  "contact_id": "cont_00000000000001",  "account_type": "card",  "card": {    "token_id": "token_4lsdksD31GaZ09",    "input_type": "razorpay_token",    "token_provider": "razorpay"  }}'
Request Parameters
contact_id mandatorystring The unique identifier of the contact for which you want to fetch payouts. For example, cont_00000000000001.account_type mandatorystring The type of account linked to the contact id. Here, it will be card.card mandatoryobject The details of the card used.input_type mandatorystring Here, the value is razorpay_token.token_provider mandatorystring The name of the aggregator that provided the token.token_id mandatorystring The unique identifier of the token to which the payout has to be made. If it is razorpay_token then the token_id must be present.
Response Parameters
Descriptions for the response parameters are present in the Payouts to Cards Entity parameters table.
Create Payout
Before you fire the API, ensure you have your API Key id and Key Secret readily available. You can generate your API keys in RazorpayX in live mode or in test mode from the RazorpayX Dashboard. You cannot use your test mode API keys to make live transactions and vice versa.
With the following endpoint, you can create a payout to Razorpay TokenHQ tokens.
POST/v1/payouts
RequestResponsecopycurl -u <YOUR_KEY>:<YOUR_SECRET> \-X POST https://api.razorpay.com/v1/payouts \-H "Content-Type: application/json" \-d '{  "account_number": "7878780080316316",  "fund_account_id": "fa_00000000000001",  "amount": 1000000,  "currency": "INR",  "mode": "card",  "purpose": "refund",  "queue_if_low_balance": true,  "reference_id": "Acme Transaction ID 12345",  "narration": "Acme Corp Fund Transfer",  "notes": {    "notes_key_1": "Tea, Earl Grey, Hot",    "notes_key_2": "Tea, Earl Greyâ¦ decaf."  }}'
Request Parameters
Descriptions for the request parameters are present in the Request Parameters table above, to create a Payout.
Response Parameters
Descriptions for the response parameters are present in the Payouts to Cards Entity parameters table.
Webhooks
Set up RazorpayX Webhooks to configure and receive notifications when a specific event occurs. When one of these events is triggered, we send an HTTP POST payload in JSON to the webhook's configured URL.
Related Information


Error Codes


Status Details


SUBSCRIBE TO DEVELOPER UPDATESSubscribeAPI Reference GuideIntegrationsSupportON THIS PAGEPayouts to Cards APIPrerequisitesUse CasesSupported Banks and Payout ModesPayouts to Cards EntityPayouts to CardsPayouts to Tokenised Cards1. For Tokens Created via External Tokenisation Providers2. For tokens created via Razorpay Token HQWebhooksRelated Information